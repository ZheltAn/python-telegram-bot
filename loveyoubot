
import logging
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackQueryHandler, CallbackContext
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
TOKEN = '5774838641:AAFZ5_y78fdhBrcHkmi2Oo5NAM1ckWKeskE'
def start(update, context):
    # посылает сообщение в ответ на команду /start
    update.message.reply_text('я люблю тебя, ксюша')

def hello(update, context):
    update.message.reply_text('ты очень красивая \U0001F600')
# для отладки
def error(update, context):
    logger.warning('Update "%s" caused error "%s"', update, context.error)
    # to start the bot
def main():
    # setup updating together with our telegram api token
    updater = Updater(TOKEN, use_context=True)
# get the dispatcher to register handlers
    dp = updater.dispatcher
# add command handlers for different command
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("hello", hello))
# error logging
    dp.add_error_handler(error)
# start the bot
    updater.start_polling()
# set the bot to run until you force it to stop
    updater.idle()
if __name__ == '__main__':
    main()
    updater.start_polling()
